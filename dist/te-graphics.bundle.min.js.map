{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/app.js","webpack:///./src/dom.js","webpack:///./src/chart.js","webpack:///./src/draw.js","webpack:///./src/ui.js","webpack:///(webpack)/buildin/global.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","global","_gOpt","TeGraphics","_dom__WEBPACK_IMPORTED_MODULE_1__","_chart__WEBPACK_IMPORTED_MODULE_2__","_draw__WEBPACK_IMPORTED_MODULE_3__","_ui__WEBPACK_IMPORTED_MODULE_4__","bgColor","font","fontSize","fontColor","thickness","cutLineColor","cutLineThickness","hintThickness","hintBgColor","hintBorderColor","hintHeaderColor","hintRadius","hintBorderRadius","hintPadding","tmpCheckBtn","color","block","data","options","start","finish","_this","this","_classCallCheck","_defineProperty","canvas","getElByClass","sliderCanvas","getContext","columns","forEach","val","k","shift","types","e","Date","unixDateToStr","dayNumToStr","_x","_charts","push","Chart","names","colors","length","obDraw","Draw","drawAll","obSlDraw","bottomIndent","drawOnlyCharts","obUI","UI","minRangeWidth","height","values","hidden","getMonth","getDate","getDay","v","_typeof","_extends","on","off","cl","getElementsByClassName","document","addEventListener","element","event","handler","attachEvent","removeEventListener","detachEvent","x","charts","ctx","w","width","h","dateClearY","bottomXIndent","dateClearH","callback","ry","_this$calculateParams2","_slicedToArray","calculateParams","rx","step","speedChartChanging","clearTimeout","timerDrawId","tick","setTimeout","_this2","smoothY","drawCutLines","drawAxisX","drawCharts","_this3","fillStyle","fillRect","_this4","min","max","minMax","pos","Math","trunc","getYOfLine","indent","div","nd","pow","numOfDigits","rnd","strokeStyle","lineWidth","rstep","y","beginPath","fillText","moveTo","lineTo","stroke","recountStep","arguments","undefined","axisX","slice","monthTextWidth","measureText","xIndent","dateStep","ceil","count","stepOfAxisX","monthWidth","iP","iD","round","_this5","getAxisX","_this6","toLeft","clearCharts","isAxisMoving","moveToLeft","moveToRight","_this7","newAxisX","axis","unshift","_toConsumableArray","clearAxisX","dateMoveStep","_this8","lastI","lastNewI","_this9","ir","isEven","opacity","opacityStep","opacity16","toString","i2","sqrt","_this10","_this11","ir2","splice","_this12","_this13","h2","floor","c1","c2","_this14","fontSHeader","fontHeader","fontSVal","fontVal","arWT","wL1","wL2","arc","PI","fill","text","wL0","roundRect","shiftHeader","shiftVal","wL12","shiftName","radius","quadraticCurveTo","closePath","onCanvasMouseDown","onCanvasMouseMove","onChangeCheck","onMouseDownSlLBtn","onMouseDownSlRange","onMouseDownSlRBtn","onMouseUp","cbox","el","createElement","innerHTML","appendChild","_onChangeCheck","sl","slLBl","slLBtn","slRange","slRBtn","slRBl","widthBtn","offsetWidth","_onCanvasMouseDown","_onCanvasMouseMove","_onMouseDownSlLBtn","_onMouseDownSlRange","_onMouseDownSlRBtn","_onMouseUp","style","left","hint","hintPosition","detectLeftMouse","clientX","target","offsetLeft","isMouseHint","drawHint","np","abs","clientXOld","timeOutOfMouseSpeed","rateOfMouseSpeed","checked","removeMouse","mouseMoveFn","onMouseMoveSlLBtn","onMouseMoveSlRange","onMouseMoveSlRBtn","isToLeft","rangeWidth","calcDrawMoveStep","f","compressAxisXtoLeft","stretchAxisXtoLeft","tmpmax","move","isToRight","stretchAxisXtoRight","compressAxisXtoRight","dateMoveStepDefault","buttons","which","button","g","Function"],"mappings":"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","file":"te-graphics.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use strict\";\n\nimport \"./scss/style.scss\";\n\nimport {getElByClass} from \"./dom\";\nimport Chart from \"./chart\";\nimport Draw from \"./draw\";\nimport UI from \"./ui\";\n\nexport let _gOpt = {\n    bgColor: \"#FFF\",\n    font: \"'Roboto', sans-serif\",\n    fontSize: 13,\n    fontColor: \"#96a2aa\",\n    thickness: 2, // px\n\n    cutLineColor: \"#f2f4f5\",\n    cutLineThickness: 1,\n\n    hintThickness: 2,\n    hintBgColor: \"#FFF\",\n    hintBorderColor: \"#f2f4f5\",\n    hintHeaderColor: \"#000\",\n    hintRadius: 4,\n    hintBorderRadius: 7,\n    hintPadding: 10,\n\n    // will be wrapped in a label tag\n    tmpCheckBtn: function (name, color, i) {\n        return '<input name=\"tg-'+i+'\" value=\"'+i+'\" type=\"checkbox\" checked>'\n                + '<div class=\"tg-ui__check-mark\" style=\"background-color: ' + color + '\"></div>'\n                + name;\n    }\n};\n\n\nexport default class TeGraphics {\n    obDraw;\n    obSlDraw;\n    obUI;\n    _charts = [];\n    _x = [];\n\n    constructor (block, data, options, start, finish) {\n        const canvas = getElByClass(block, \"tg__canvas\");\n        const sliderCanvas = getElByClass(block, \"tg-ui-slider__canvas\");\n        this.options = options;\n        canvas.getContext(\"2d\").font = _gOpt.fontSize + \"px \" + _gOpt.font;\n\n        // parse\n        data.columns.forEach((val) => {\n            let k = val.shift();\n            let t = data.types[k];\n\n            if (t === \"x\") {\n                val.forEach((e, i) => {\n                    const d = new Date(val[i]);\n                    val[i] = [this.unixDateToStr(d), this.dayNumToStr(d)];\n                });\n                this._x = val;\n            } else if (t === \"line\") {\n                this._charts.push(new Chart(data.names[k], data.colors[k], val));\n            }\n        });\n\n        if (!start) start = 0;\n        finish = finish ? (finish + 1) : this._x.length;\n\n        this.obDraw = new Draw(canvas, this._x, this._charts, start, finish);\n        this.obDraw.drawAll();\n\n        this.obSlDraw = new Draw(sliderCanvas, this._x, this._charts, 0, this._x.length);\n        this.obSlDraw.bottomIndent = 0;\n        this.obSlDraw.thickness = 1;\n        this.obSlDraw.drawOnlyCharts();\n\n        this.obUI = new UI(block, this._charts, this.obDraw, this.obSlDraw, start, finish);\n        this.obUI.minRangeWidth = sliderCanvas.height;\n    }\n\n    get charts () {\n        return this._charts;\n    }\n\n    get x () {\n        return this._x;\n    }\n\n    get options () {\n        return _gOpt;\n    }\n\n    set options (v) {\n        if (typeof v === \"object\") Object.assign(_gOpt, v);\n    }\n\n    addChart(name, color, values) {\n        this._charts.push(new Chart(name, color, values));\n        this.obDraw.drawAll();\n        this.obSlDraw.drawOnlyCharts();\n    }\n\n    hideChart(n) {\n        this._charts[n].hidden = true;\n        this.obDraw.drawAll();\n        this.obSlDraw.drawOnlyCharts();\n    }\n\n    showChart(n) {\n        this._charts[n].hidden = false;\n        this.obDraw.drawAll();\n        this.obSlDraw.drawOnlyCharts();\n    }\n\n    unixDateToStr (d) {\n        let m = \"\";\n\n        switch (d.getMonth()) {\n        case 0:\n            m = \"Jan\";\n            break;\n        case 1:\n            m = \"Feb\";\n            break;\n        case 2:\n            m = \"Mar\";\n            break;\n        case 3:\n            m = \"Apr\";\n            break;\n        case 4:\n            m = \"May\";\n            break;\n        case 5:\n            m = \"Jun\";\n            break;\n        case 6:\n            m = \"Jul\";\n            break;\n        case 7:\n            m = \"Aug\";\n            break;\n        case 8:\n            m = \"Sept\";\n            break;\n        case 9:\n            m = \"Oct\";\n            break;\n        case 10:\n            m = \"Nov\";\n            break;\n        case 11:\n            m = \"Dec\";\n        }\n        return  m + \" \" + d.getDate();\n    }\n\n    dayNumToStr (d) {\n        switch (d.getDay()) {\n        case 0:\n            return \"Sun\";\n        case 1:\n            return \"Mon\";\n        case 2:\n            return \"Tue\";\n        case 3:\n            return \"Wed\";\n        case 4:\n            return \"Thu\";\n        case 5:\n            return \"Fri\";\n        default:\n            return \"Sat\";\n        }\n    }\n}\n\nglobal.TeGraphics = TeGraphics;\n","export const getElByClass = function(e, cl) {\n    return e.getElementsByClassName(cl)[0];\n};\n\nexport const on = (function() {\n    if (document.addEventListener) {\n        return function(element, event, handler) {\n            if (element && event && handler) {\n                element.addEventListener(event, handler, false);\n            }\n        };\n    } else {\n        return function(element, event, handler) {\n            if (element && event && handler) {\n                element.attachEvent('on' + event, handler);\n            }\n        };\n    }\n})();\n\nexport const off = (function() {\n    if (document.removeEventListener) {\n        return function(element, event, handler) {\n            if (element && event) {\n                element.removeEventListener(event, handler, false);\n            }\n        };\n    } else {\n        return function(element, event, handler) {\n            if (element && event) {\n                element.detachEvent('on' + event, handler);\n            }\n        };\n    }\n})();\n","export default class Chart {\r\n    name;\r\n    color;\r\n    values;\r\n    hidden = false;\r\n\r\n    constructor (name, color, values) {\r\n        this.name = name;\r\n        this.color = color;\r\n        this.values = values;\r\n    }\r\n}","import {_gOpt} from \"./app\";\r\n\r\nexport default class Draw {\r\n    canvas;\r\n    ctx;\r\n    x;\r\n    charts;\r\n    start;\r\n    finish;\r\n    xIndent = 10;\r\n    bottomXIndent = 12;\r\n    indent = 8;\r\n    bottomIndent = 25;\r\n    monthWidth;\r\n    speedChartChanging = 0.15;\r\n    timerDrawId;\r\n    dateMoveStep = 3;\r\n    dateMoveStepDefault = 3;\r\n    thickness =_gOpt.thickness;\r\n    w;\r\n    h;\r\n    min;\r\n    max;\r\n    rx;\r\n    ry;\r\n    axisX; // array [text, x, y]\r\n    isAxisMoving = false;\r\n\r\n    constructor (canvas, x, charts, start, finish) {\r\n        this.canvas = canvas;\r\n        this.ctx = canvas.getContext(\"2d\");\r\n        this.w = canvas.width;\r\n        this.h = canvas.height;\r\n        this.x = x;\r\n        this.charts = charts;\r\n        this.start = start;\r\n        this.finish = finish;\r\n        this.dateClearY = this.h - this.bottomXIndent - _gOpt.fontSize;\r\n        this.dateClearH = _gOpt.fontSize + 5;\r\n    }\r\n\r\n    smoothY (start, finish, callback) {\r\n        let ry;\r\n        [this.rx, ry] = this.calculateParams(start, finish);\r\n        if (typeof this.ry === \"undefined\") this.ry = ry;\r\n        const step = (ry - this.ry) * this.speedChartChanging;\r\n\r\n        clearTimeout(this.timerDrawId);\r\n        const tick = () => {\r\n            if (step > 0 ? this.ry < ry : this.ry > ry) {\r\n                callback();\r\n                this.timerDrawId = setTimeout(tick, 25); // recursion\r\n                this.ry += step;\r\n            } else {\r\n                this.ry = ry;\r\n                callback();\r\n            }\r\n        };\r\n        tick();\r\n    }\r\n\r\n    drawAll (start, finish) {\r\n        this.smoothY(start, finish, () => {\r\n            this.bgColor();\r\n            this.drawCutLines();\r\n            this.drawAxisX();\r\n            this.drawCharts();\r\n        });\r\n    }\r\n\r\n    drawOnlyCharts (start, finish) {\r\n        this.smoothY(start, finish, () => {\r\n            this.bgColor();\r\n            this.drawCharts();\r\n        });\r\n    }\r\n\r\n    bgColor () {\r\n        this.ctx.fillStyle = _gOpt.bgColor;\r\n        this.ctx.fillRect(0,0,this.w,this.h);\r\n    }\r\n\r\n    /**\r\n     * calculate start, finish, min, max, rx, ry\r\n     * @param start\r\n     * @param finish\r\n     */\r\n    calculateParams (start, finish) {\r\n        if (typeof start !== \"undefined\") this.start = start;\r\n        if (typeof finish !== \"undefined\") this.finish = finish;\r\n        start = this.start;\r\n        finish = this.finish;\r\n\r\n        // min and max y\r\n        this.min = 0; // Number.MAX_VALUE;\r\n        this.max = 1; // 0\r\n\r\n        const minMax = (v) => {\r\n            if (v < this.min) this.min = v;\r\n            if (v > this.max) this.max = v;\r\n        };\r\n\r\n        this.charts.forEach((c) => {\r\n            if (c.hidden) return;\r\n\r\n            // fractional part of the number\r\n            if (start % 1 > 0) {\r\n                let pos = Math.trunc(start);\r\n                minMax(this.getYOfLine([pos, c.values[pos]], [++pos, c.values[pos]], start));\r\n                start = pos;\r\n            }\r\n            if (finish % 1 > 0) {\r\n                let pos = Math.trunc(finish) - 1;\r\n                minMax(this.getYOfLine([pos, c.values[pos]], [++pos, c.values[pos]], finish-1));\r\n                finish = pos;\r\n            }\r\n\r\n            for (let i = start; i < finish; i++) {\r\n                minMax(c.values[i]);\r\n            }\r\n        });\r\n        //this.rx = this.w / (this.finish - this.start - 1);\r\n        //this.ry = (this.h-this.bottomIndent-this.indent*2)/(this.max - this.min);\r\n        return [this.w / (this.finish - this.start - 1), (this.h-this.bottomIndent-this.indent*2)/(this.max - this.min)];\r\n    }\r\n\r\n    drawCutLines () {\r\n        const ctx = this.ctx;\r\n        const nd = Math.pow(10,  this.numOfDigits(this.max) - 1);\r\n\r\n        // density of cut lines\r\n        let rnd = this.h * (this.max - this.min) / nd;\r\n        let div;\r\n        if (rnd < 500) div = 5;\r\n        else if (rnd < 1100) div = 2.5;\r\n        else if (rnd < 1500) div = 2;\r\n        else /*if (rnd < 2600)*/ div = 1;\r\n        //else div = 0.65;\r\n\r\n        // cut lines\r\n        ctx.fillStyle = _gOpt.fontColor;\r\n        ctx.strokeStyle = _gOpt.cutLineColor;\r\n        ctx.lineWidth = _gOpt.cutLineThickness;\r\n        let step = Math.trunc(nd / div);\r\n        if (step < 1) step = 1;\r\n        const rstep = step * this.ry;\r\n        let y = this.h - this.bottomIndent - this.indent;\r\n        ctx.beginPath();\r\n        let max = this.max - (_gOpt.fontSize + 2) / this.ry;\r\n        for (let i = 0; i < max; i += step) {\r\n            ctx.fillText(i, 0, y - 8);\r\n            ctx.moveTo(0, y);\r\n            ctx.lineTo(this.w, y);\r\n            y -= rstep;\r\n        }\r\n        ctx.stroke();\r\n    }\r\n\r\n    getAxisX (recountStep = true) {\r\n        let axisX = [];\r\n        let x = this.x.slice(this.start, this.finish);\r\n        const rx = this.w / (x.length - 1);\r\n        const monthTextWidth = this.ctx.measureText(\"Mar 25\").width;\r\n        let w = this.w - this.xIndent*2 - monthTextWidth;\r\n        const dateStep = Math.ceil(monthTextWidth / rx) * 2;\r\n        let count = w / dateStep / rx;\r\n        const shift = count % 1 * rx;\r\n        count = Math.trunc(count);\r\n\r\n        if (recountStep) {\r\n            this.stepOfAxisX = (w - shift) / count;  // for intervals between months\r\n            this.monthWidth = this.stepOfAxisX / 2;\r\n        }\r\n\r\n        let iP = this.xIndent + shift/2;\r\n        let iD = Math.round((iP + this.stepOfAxisX / 2) / rx);\r\n        const y = this.h - this.bottomXIndent;\r\n        for (let i = 0; i <= count; i++) {\r\n            axisX.push([x[iD][0], iP, y]);\r\n            iP += this.stepOfAxisX;\r\n            iD += dateStep;\r\n        }\r\n\r\n        return axisX;\r\n    }\r\n\r\n    clearAxisX () {\r\n        this.ctx.fillStyle = _gOpt.bgColor;\r\n        this.ctx.fillRect(0, this.dateClearY, this.w, this.dateClearH);\r\n    }\r\n\r\n    clearCharts () {\r\n        this.ctx.fillStyle = _gOpt.bgColor;\r\n        this.ctx.fillRect(0,0,this.w,this.axisX[0][2] - _gOpt.fontSize);\r\n    }\r\n\r\n    drawAxisX () {\r\n        this.axisX = this.getAxisX();\r\n        this.ctx.fillStyle = _gOpt.fontColor;\r\n        this.axisX.forEach((e) => this.ctx.fillText(e[0], e[1], e[2]));\r\n    }\r\n\r\n    move (toLeft = true, start, finish) {\r\n        this.smoothY(start, finish, () => {\r\n            this.clearCharts();\r\n            this.drawCutLines();\r\n            this.drawCharts();\r\n        });\r\n\r\n        if (this.isAxisMoving) return;\r\n        toLeft ? this.moveToLeft(start, finish) : this.moveToRight(start, finish);\r\n    }\r\n\r\n    moveToLeft (start, finish) {\r\n        const newAxisX = this.getAxisX(false); // new\r\n        let axis = this.axisX; // old\r\n        if (axis[0][0] === newAxisX[0][0]) return;\r\n\r\n        this.isAxisMoving = true;\r\n        this.axisX = newAxisX; // new\r\n        axis.unshift([...newAxisX[0]]);\r\n        const max = this.monthWidth * 2;\r\n        axis[0][1] -= max;\r\n\r\n        let i = 0;\r\n        const tick = () => {\r\n            this.clearAxisX();\r\n            this.ctx.fillStyle = _gOpt.fontColor;\r\n\r\n            if (i < max) {\r\n                axis.forEach((e) => this.ctx.fillText(e[0], e[1] + i, e[2]));\r\n                setTimeout(tick, 15); // recursion\r\n            } else {\r\n                this.isAxisMoving = false;\r\n                this.axisX.forEach((e) => this.ctx.fillText(e[0], e[1], e[2]));\r\n            }\r\n            i += this.dateMoveStep;\r\n        };\r\n        tick();\r\n    }\r\n\r\n    moveToRight (start, finish) {\r\n        const newAxisX = this.getAxisX(false); // new\r\n        let axis = this.axisX; // old\r\n        const lastI = axis.length - 1;\r\n        const lastNewI = newAxisX.length - 1;\r\n        if (axis[lastI][0] === newAxisX[lastNewI][0]) return;\r\n\r\n        this.isAxisMoving = true;\r\n        this.axisX = newAxisX; // new\r\n        axis.push([...newAxisX[lastNewI]]);\r\n        const max = this.monthWidth * 2;\r\n        axis[lastI+1][1] += max;\r\n\r\n        let i = 0;\r\n        const tick = () => {\r\n            this.clearAxisX();\r\n            this.ctx.fillStyle = _gOpt.fontColor;\r\n\r\n            if (i < max) {\r\n                axis.forEach((e) => this.ctx.fillText(e[0], e[1] - i, e[2]));\r\n                setTimeout(tick, 15); // recursion\r\n            } else {\r\n                this.isAxisMoving = false;\r\n                this.axisX.forEach((e) => this.ctx.fillText(e[0], e[1], e[2]));\r\n            }\r\n            i += this.dateMoveStep;\r\n        };\r\n        tick();\r\n    }\r\n\r\n    stretchAxisXtoLeft (start, finish) {\r\n        this.smoothY(start, finish, () => {\r\n            this.clearCharts();\r\n            this.drawCutLines();\r\n            this.drawCharts();\r\n        });\r\n\r\n        if (this.isAxisMoving) return;\r\n\r\n        const max = this.monthWidth * 2;\r\n        const newAxisX = this.getAxisX(); // new\r\n        let axis = this.axisX; // old\r\n        if (axis[0][0] === newAxisX[0][0]) return;\r\n\r\n        this.isAxisMoving = true;\r\n        this.axisX = newAxisX; // new\r\n\r\n        for (let ir = newAxisX.length - 1; ir >= 0; ir--) {\r\n            axis.unshift([...newAxisX[ir]]);\r\n            axis[0][1] = axis[1][1] - max;\r\n        }\r\n\r\n        const isEven = axis.length % 2; // even number of axis length\r\n        let i = 0;\r\n        let opacity = 255;\r\n\r\n        const opacityStep = 144 / this.dateMoveStep;\r\n        const tick = () => {\r\n            this.clearAxisX();\r\n            this.ctx.fillStyle = _gOpt.fontColor;\r\n\r\n            if (i < max) {\r\n                let opacity16 = Math.trunc(opacity).toString(16);\r\n                if (opacity16.length < 2) opacity16 = \"0\" + opacity16;\r\n\r\n                axis.forEach((e, i2) => {\r\n                    if (i2 % 2 == isEven) this.ctx.fillStyle += opacity16;\r\n                    else this.ctx.fillStyle = _gOpt.fontColor;\r\n\r\n                    const shift = i * Math.round((axis.length - i2 - 1) / 2);\r\n                    this.ctx.fillText(e[0], e[1] + shift, e[2]);\r\n                });\r\n                setTimeout(tick, 15); // recursion\r\n            } else {\r\n                this.isAxisMoving = false;\r\n                this.axisX = this.getAxisX(); // new\r\n                this.axisX.forEach((e) => this.ctx.fillText(e[0], e[1], e[2]));\r\n            }\r\n            i += 3 + Math.sqrt(this.dateMoveStep)/4;\r\n            if (opacity > 0) opacity -= opacityStep;\r\n            else opacity = 0;\r\n        };\r\n        tick();\r\n    }\r\n\r\n    stretchAxisXtoRight (start, finish) {\r\n        this.smoothY(start, finish, () => {\r\n            this.clearCharts();\r\n            this.drawCutLines();\r\n            this.drawCharts();\r\n        });\r\n\r\n        if (this.isAxisMoving) return;\r\n\r\n        const max = this.monthWidth * 2;\r\n        const newAxisX = this.getAxisX(); // new\r\n        let axis = this.axisX; // old\r\n        if (axis[axis.length - 1][0] === newAxisX[newAxisX.length -1][0]) return;\r\n\r\n        this.isAxisMoving = true;\r\n        this.axisX = newAxisX; // new\r\n\r\n        for (let i = 0; i < newAxisX.length; i++) {\r\n            axis.push([...newAxisX[i]]);\r\n            axis[axis.length-1][1] = axis[axis.length-2][1] + max;\r\n        }\r\n\r\n        let i = 0;\r\n        let opacity = 255;\r\n\r\n        const opacityStep = 144 / this.dateMoveStep;\r\n        const tick = () => {\r\n            this.clearAxisX();\r\n            this.ctx.fillStyle = _gOpt.fontColor;\r\n\r\n            if (i < max) {\r\n                let opacity16 = Math.trunc(opacity).toString(16);\r\n                if (opacity16.length < 2) opacity16 = \"0\" + opacity16;\r\n\r\n                axis.forEach((e, i2) => {\r\n                    if (i2 % 2) this.ctx.fillStyle += opacity16;\r\n                    else this.ctx.fillStyle = _gOpt.fontColor;\r\n\r\n                    const shift = i * Math.round(i2 / 2);\r\n                    this.ctx.fillText(e[0], e[1] - shift, e[2]);\r\n                });\r\n                setTimeout(tick, 15); // recursion\r\n            } else {\r\n                this.isAxisMoving = false;\r\n                this.axisX = this.getAxisX(); // new\r\n                this.axisX.forEach((e) => this.ctx.fillText(e[0], e[1], e[2]));\r\n            }\r\n            i += 3 + Math.sqrt(this.dateMoveStep)/4;\r\n            if (opacity > 0) opacity -= opacityStep;\r\n            else opacity = 0;\r\n        };\r\n        tick();\r\n    }\r\n\r\n    compressAxisXtoLeft (start, finish) {\r\n        this.smoothY(start, finish, () => {\r\n            this.clearCharts();\r\n            this.drawCutLines();\r\n            this.drawCharts();\r\n        });\r\n\r\n        if (this.isAxisMoving) return;\r\n\r\n        const max = this.monthWidth;\r\n        const newAxisX = this.getAxisX(); // new\r\n        let axis = this.axisX; // old\r\n        if (axis[0][0] === newAxisX[0][0]) return;\r\n\r\n        this.isAxisMoving = true;\r\n        this.axisX = newAxisX; // new\r\n\r\n        for (let ir = axis.length-1, ir2 = newAxisX.length-1; ir > 1 && ir2 >= 0; ir--, ir2--) {\r\n            axis.splice(ir, 0, [...newAxisX[ir2]]);\r\n            axis[ir][1] = axis[ir-1][1] + this.monthWidth;\r\n        }\r\n\r\n        const isEven = axis.length % 2; // even number of axis length\r\n        let i = max;\r\n        let opacity = 0;\r\n\r\n        const opacityStep = 255 / this.dateMoveStep;\r\n        const tick = () => {\r\n            this.clearAxisX();\r\n            this.ctx.fillStyle = _gOpt.fontColor;\r\n\r\n            if (i > 0) {\r\n                let opacity16 = Math.trunc(opacity).toString(16);\r\n                if (opacity16.length < 2) opacity16 = \"0\" + opacity16;\r\n\r\n                axis.forEach((e, i2) => {\r\n                    if (i2 % 2 !== isEven) this.ctx.fillStyle += opacity16;\r\n                    else this.ctx.fillStyle = _gOpt.fontColor;\r\n\r\n                    const shift = (i - max-1) * (axis.length - i2 - 1);\r\n                    this.ctx.fillText(e[0], e[1] + shift, e[2]);\r\n                });\r\n                setTimeout(tick, 10); // recursion\r\n            } else {\r\n                this.isAxisMoving = false;\r\n                this.axisX = this.getAxisX(); // new\r\n                this.axisX.forEach((e) => this.ctx.fillText(e[0], e[1], e[2]));\r\n            }\r\n            i -= 1 + Math.sqrt(this.dateMoveStep)/4;\r\n            if (opacity < 255) opacity += opacityStep;\r\n            else opacity = 255;\r\n        };\r\n        tick();\r\n    }\r\n\r\n    compressAxisXtoRight (start, finish) {\r\n        this.smoothY(start, finish, () => {\r\n            this.clearCharts();\r\n            this.drawCutLines();\r\n            this.drawCharts();\r\n        });\r\n\r\n        if (this.isAxisMoving) return;\r\n\r\n        const max = this.monthWidth;\r\n        const newAxisX = this.getAxisX(); // new\r\n        let axis = this.axisX; // old\r\n        if (axis[axis.length - 1][0] === newAxisX[newAxisX.length - 1][0]) return;\r\n\r\n        this.isAxisMoving = true;\r\n        this.axisX = newAxisX; // new\r\n\r\n        for (let i = 1, i2 = 0; i < axis.length && i2 < newAxisX.length; i+=2, i2++) {\r\n            axis.splice(i, 0, [...newAxisX[i2]]);\r\n            axis[i][1] = axis[i-1][1] + this.monthWidth;\r\n        }\r\n\r\n        const isEven = axis.length % 2; // even number of axis length\r\n        let i = 0;\r\n        let opacity = 0;\r\n\r\n        const opacityStep = 255 / this.dateMoveStep;\r\n        const tick = () => {\r\n            this.clearAxisX();\r\n            this.ctx.fillStyle = _gOpt.fontColor;\r\n\r\n            if (i < max) {\r\n                let opacity16 = Math.trunc(opacity).toString(16);\r\n                if (opacity16.length < 2) opacity16 = \"0\" + opacity16;\r\n\r\n                axis.forEach((e, i2) => {\r\n                    if (i2 % 2) this.ctx.fillStyle += opacity16;\r\n                    else this.ctx.fillStyle = _gOpt.fontColor;\r\n\r\n                    const shift = i * i2;\r\n                    this.ctx.fillText(e[0], e[1] + shift, e[2]);\r\n                });\r\n                setTimeout(tick, 10); // recursion\r\n            } else {\r\n                this.isAxisMoving = false;\r\n                this.axisX = this.getAxisX(); // new\r\n                this.axisX.forEach((e) => this.ctx.fillText(e[0], e[1], e[2]));\r\n            }\r\n            i += 1 + Math.sqrt(this.dateMoveStep)/4;\r\n            if (opacity < 255) opacity += opacityStep;\r\n            else opacity = 255;\r\n        };\r\n        tick();\r\n    }\r\n\r\n    drawCharts () {\r\n        const ctx = this.ctx;\r\n        ctx.lineWidth = this.thickness;\r\n        let h2 = this.h - this.bottomIndent-this.indent;\r\n        let start = this.start;\r\n        let finish = this.finish;\r\n        const shift = (1 - start % 1) * this.rx;\r\n        start = Math.floor(start);\r\n        if (finish < this.x.length) finish++;\r\n\r\n        this.charts.forEach((c) => {\r\n            if (c.hidden) return;\r\n            ctx.strokeStyle = c.color;\r\n            ctx.beginPath();\r\n            let x = 0;\r\n            if (shift > 0) x = -1;\r\n            ctx.moveTo(shift + x * this.rx, h2-(c.values[start]-this.min)*this.ry);\r\n            x++;\r\n            for (let i = start+1; i < finish; i++, x++) {\r\n                ctx.lineTo(shift + x*this.rx, h2-(c.values[i]-this.min)*this.ry);\r\n            }\r\n            ctx.stroke();\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param c1 - coord [x,y]\r\n     * @param c2 - coord [x,y]\r\n     */\r\n    getYOfLine (c1, c2, x) {\r\n        return (c2[1] - c1[1]) / (c2[0] - c1[0]) * (x - c1[0]) + c1[1]; // equation of a line\r\n    }\r\n\r\n    hint (n) {\r\n        const ctx = this.ctx;\r\n        const shift = (1 - this.start % 1) * this.rx;\r\n        const font = _gOpt.fontSize + \"px \" + _gOpt.font;\r\n        const fontSHeader = _gOpt.fontSize + 1; // font size\r\n        const fontHeader = fontSHeader + \"px \" + _gOpt.font;\r\n        const fontSVal = fontSHeader + 2;\r\n        const fontVal = fontSVal + \"px \" + _gOpt.font;\r\n        const lineSp1 = 15; // line spacing\r\n        const lineSp2 = 5;\r\n        const intervalBetween = 20; // interval between values\r\n        let arWT = []; // array of text width [width of val, width of name]\r\n\r\n        ctx.font = font;\r\n        let x = (n - this.start) * this.rx;\r\n        let y = this.h-this.bottomIndent - this.indent;\r\n\r\n        // line\r\n        ctx.strokeStyle = _gOpt.cutLineColor;\r\n        ctx.lineWidth = _gOpt.hintThickness;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, 50);\r\n        ctx.lineTo(x, y);\r\n        ctx.stroke();\r\n\r\n        // circles\r\n        ctx.fillStyle = _gOpt.bgColor;\r\n        ctx.lineWidth = _gOpt.thickness;\r\n        let wL1 = 0;\r\n        let wL2 = 0;\r\n        this.charts.forEach((c, i) => {\r\n            if (c.hidden) return;\r\n            ctx.font = fontHeader;\r\n            arWT[i] = [];\r\n            arWT[i][0] = ctx.measureText(c.values[n]).width;\r\n            wL1 += arWT[i][0] + intervalBetween;\r\n            ctx.font = font;\r\n            arWT[i][1] = ctx.measureText(c.name).width;\r\n            wL2 += arWT[i][1] + intervalBetween;\r\n            ctx.strokeStyle = c.color;\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                x,\r\n                y - c.values[n] * this.ry,\r\n                _gOpt.cutLineThickness+_gOpt.hintRadius,\r\n                0,\r\n                2 * Math.PI\r\n            );\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        });\r\n        wL1 -= intervalBetween;\r\n        wL2 -= intervalBetween;\r\n\r\n        // rectangle\r\n        ctx.font = fontHeader;\r\n        let text = this.x[n][1] + \", \" + this.x[n][0];\r\n        let wL0 = ctx.measureText(text).width;\r\n        const width = Math.max( wL0, wL1, wL2) + _gOpt.hintPadding * 2;\r\n        const height = _gOpt.fontSize + fontSHeader + fontSVal + _gOpt.hintPadding * 2 + lineSp1 + lineSp2;\r\n        x -= width / 2;\r\n        y = 10;\r\n        ctx.strokeStyle = _gOpt.hintBorderColor;\r\n        ctx.lineWidth = _gOpt.hintThickness;\r\n        ctx.fillStyle = _gOpt.hintBgColor;\r\n        this.roundRect(x, y, width, height, _gOpt.hintBorderRadius,);\r\n        this.roundRect(x+1, y+1, width-2, height-2, _gOpt.hintBorderRadius, true);\r\n\r\n        // shift\r\n        let shiftHeader = 0;\r\n        let shiftVal = 0;\r\n        const wL12 = Math.max(wL1, wL2);\r\n        if (wL0 < wL12) shiftHeader = (wL12 - wL0) / 2;\r\n        else shiftVal = (wL0 - wL12) / 2;\r\n\r\n        // text\r\n        ctx.fillStyle = _gOpt.hintHeaderColor;\r\n        ctx.strokeStyle = _gOpt.cutLineColor;\r\n        ctx.lineWidth = _gOpt.cutLineThickness;\r\n        x += _gOpt.hintPadding;\r\n        y += _gOpt.hintPadding + fontSHeader;\r\n        ctx.fillText(text, x + shiftHeader, y);\r\n\r\n        ctx.font = _gOpt.fontSize + \"px \" + _gOpt.font;\r\n        y += lineSp1 + fontSVal;\r\n        x += shiftVal;\r\n        this.charts.forEach((c, i) => {\r\n            if (c.hidden) return;\r\n            ctx.fillStyle = c.color;\r\n            let w, shiftVal = 0, shiftName = 0;\r\n            if (arWT[i][0] > arWT[i][1]) {\r\n                w = arWT[i][0];\r\n                shiftName = (arWT[i][0] - arWT[i][1]) / 2 - 1;\r\n            } else {\r\n                w = arWT[i][1];\r\n                shiftVal = (arWT[i][1] - arWT[i][0]) / 2 - 1;\r\n            }\r\n            ctx.font = fontVal;\r\n            ctx.fillText(c.values[n], x + shiftVal, y);\r\n            ctx.font = font;\r\n            ctx.fillText(c.name, x + shiftName, y + _gOpt.fontSize + lineSp2);\r\n            x += w + intervalBetween;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Draws a rounded rectangle using the current state of the canvas.\r\n     * @param {CanvasRenderingContext2D} ctx\r\n     * @param {Number} x The top left x coordinate\r\n     * @param {Number} y The top left y coordinate\r\n     * @param {Number} width The width of the rectangle\r\n     * @param {Number} height The height of the rectangle\r\n     * @param {Number} radius The corner radius. Defaults to 5;\r\n     * @param {Boolean} fill Whether to fill the rectangle. Defaults to false.\r\n     * @param {Boolean} stroke Whether to stroke the rectangle. Defaults to true.\r\n     */\r\n    roundRect(x, y, width, height, radius, fill, stroke) {\r\n        const ctx = this.ctx;\r\n        if (typeof stroke == \"undefined\" ) stroke = true;\r\n        if (typeof radius === \"undefined\") radius = 5;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + radius, y);\r\n        ctx.lineTo(x + width - radius, y);\r\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n        ctx.lineTo(x + width, y + height - radius);\r\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n        ctx.lineTo(x + radius, y + height);\r\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n        ctx.lineTo(x, y + radius);\r\n        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n        ctx.closePath();\r\n        if (stroke) ctx.stroke();\r\n        if (fill) ctx.fill();\r\n    }\r\n\r\n    numOfDigits (n) {\r\n        let i = 0;\r\n        while(n > 0) {\r\n            n = Math.trunc(n / 10);\r\n            ++i;\r\n        }\r\n        return i;\r\n    }\r\n}","import {_gOpt} from \"./app\";\r\nimport {getElByClass, on, off} from \"./dom\";\r\n\r\nexport default class UI {\r\n    block;\r\n    charts;\r\n    obDraw;\r\n    obSlDraw;\r\n    start;\r\n    finish;\r\n    slLBl;\r\n    slLBtn;\r\n    slRange;\r\n    slRBtn;\r\n    slRBl;\r\n    rx;\r\n    w;\r\n    clientXOld = 0;\r\n    rateOfMouseSpeed = 8000; // rate factor of date\r\n    timeOutOfMouseSpeed = 50;\r\n    minRangeWidth = 10;\r\n    hintPosition;\r\n    isMouseHint = false;\r\n    widthBtn;\r\n    pos;\r\n    _onCanvasMouseDown = (e) => this.onCanvasMouseDown(e);\r\n    _onCanvasMouseMove = (e) => this.onCanvasMouseMove(e);\r\n    _onChangeCheck = (e) => this.onChangeCheck(e);\r\n    _onMouseDownSlLBtn = (e) => this.onMouseDownSlLBtn(e);\r\n    _onMouseDownSlRange = (e) => this.onMouseDownSlRange(e);\r\n    _onMouseDownSlRBtn = (e) => this.onMouseDownSlRBtn(e);\r\n    mouseMoveFn;\r\n    _onMouseUp = (e) => this.onMouseUp(e);\r\n\r\n    constructor (block, charts, obDraw, obSlDraw, start, finish) {\r\n        this.block = block;\r\n        this.charts = charts;\r\n        this.obDraw = obDraw;\r\n        this.obSlDraw = obSlDraw;\r\n        this.start = start;\r\n        this.finish = finish;\r\n\r\n        // init checkboxes\r\n        const cbox = getElByClass(this.block, \"tg-ui__checkboxes\");\r\n        this.charts.forEach((c,i) => {\r\n            let el = document.createElement(\"label\");\r\n            el.innerHTML = _gOpt.tmpCheckBtn(c.name, c.color, i);\r\n            cbox.appendChild(el);\r\n            on(el, \"change\", this._onChangeCheck);\r\n        });\r\n\r\n        // init slider\r\n        const sl = getElByClass(this.block, \"tg-ui-slider\");\r\n        this.slLBl = getElByClass(sl, \"tg-ui-slider__l-bl\");\r\n        this.slLBtn = getElByClass(sl, \"tg-ui-slider__l-btn\");\r\n        this.slRange = getElByClass(sl, \"tg-ui-slider__range\");\r\n        this.slRBtn = getElByClass(sl, \"tg-ui-slider__r-btn\");\r\n        this.slRBl = getElByClass(sl, \"tg-ui-slider__r-bl\");\r\n        this.widthBtn = this.slLBtn.offsetWidth;\r\n        this.rx = obSlDraw.rx;\r\n        this.w = obSlDraw.w;\r\n        on(this.obDraw.canvas, \"mousedown\", this._onCanvasMouseDown);\r\n        on(this.obDraw.canvas, \"mousemove\", this._onCanvasMouseMove);\r\n        on(this.slLBtn, \"mousedown\", this._onMouseDownSlLBtn);\r\n        on(this.slRange, \"mousedown\", this._onMouseDownSlRange);\r\n        on(this.slRBtn, \"mousedown\", this._onMouseDownSlRBtn);\r\n        on(document, \"mouseup\", this._onMouseUp);\r\n\r\n        // set position slider\r\n        let l = Math.floor(start * this.rx);\r\n        let r =  Math.ceil((finish - 1) * this.rx);\r\n        this.slLBtn.style.left = this.slLBl.style.width = l + \"px\";\r\n        l += this.widthBtn;\r\n        this.slRange.style.left = l + \"px\";\r\n        this.slRange.style.width = r - l - this.widthBtn + \"px\";\r\n        l += this.slRange.offsetWidth;\r\n        this.slRBtn.style.left = l + \"px\";\r\n        this.slRBl.style.width = this.w - l - this.widthBtn + \"px\";\r\n    }\r\n\r\n    drawHint () {\r\n        this.obDraw.clearCharts();\r\n        this.obDraw.drawCutLines();\r\n        this.obDraw.drawCharts();\r\n        this.obDraw.hint(this.hintPosition);\r\n    }\r\n\r\n    onCanvasMouseDown (e) {\r\n        if (this.detectLeftMouse(e)) {\r\n            this.hintPosition = Math.round(this.obDraw.start + (e.clientX - e.target.offsetLeft) / this.obDraw.rx);\r\n            this.isMouseHint = true;\r\n            this.drawHint();\r\n        }\r\n    }\r\n\r\n    onCanvasMouseMove (e) {\r\n        if (this.isMouseHint) {\r\n            const np = Math.round(this.obDraw.start + (e.clientX - e.target.offsetLeft) / this.obDraw.rx);\r\n            if (np !== this.hintPosition) {\r\n                this.hintPosition = np;\r\n                this.drawHint();\r\n            }\r\n        }\r\n    }\r\n\r\n    calcDrawMoveStep (e) {\r\n        setTimeout(() => {\r\n            this.obDraw.dateMoveStep = Math.round(\r\n                Math.sqrt(\r\n                    Math.abs(this.clientXOld - e.clientX) / this.timeOutOfMouseSpeed * this.rateOfMouseSpeed\r\n                ) / 1.2\r\n            );\r\n            if (this.obDraw.dateMoveStep > this.obDraw.monthWidth) this.obDraw.dateMoveStep = this.obDraw.monthWidth;\r\n            this.clientXOld = e.clientX;\r\n        }, this.timeOutOfMouseSpeed);\r\n    }\r\n\r\n    onChangeCheck (e) {\r\n        let count = 0;\r\n        this.charts.forEach((c) => {\r\n            if (!c.hidden) ++count;\r\n        });\r\n\r\n        if (count === 1 && !e.target.checked) {\r\n            e.target.checked = true; // one chart should always be shown\r\n        } else {\r\n            this.charts[e.target.value].hidden = !e.target.checked;\r\n            this.obDraw.drawAll();\r\n            this.obSlDraw.drawOnlyCharts();\r\n        }\r\n    }\r\n\r\n    onMouseDownSlLBtn (e) {\r\n        this.removeMouse();\r\n        if (!this.detectLeftMouse(e)) return;\r\n        this.hintPosition = null;\r\n        this.pos = e.clientX - e.target.offsetLeft;\r\n        this.mouseMoveFn = (e) => this.onMouseMoveSlLBtn(e);\r\n        on(document, \"mousemove\", this.mouseMoveFn);\r\n    }\r\n\r\n    onMouseDownSlRange (e) {\r\n        this.removeMouse();\r\n        if (!this.detectLeftMouse(e)) return;\r\n        this.hintPosition = null;\r\n        this.pos = e.clientX - this.slLBtn.offsetLeft;\r\n        this.mouseMoveFn = (e) => this.onMouseMoveSlRange(e);\r\n        on(document, \"mousemove\", this.mouseMoveFn);\r\n    }\r\n\r\n    onMouseDownSlRBtn (e) {\r\n        this.removeMouse();\r\n        if (!this.detectLeftMouse(e)) return;\r\n        this.hintPosition = null;\r\n        this.pos = e.clientX - e.target.offsetLeft;\r\n        this.mouseMoveFn = (e) => this.onMouseMoveSlRBtn(e);\r\n        on(document, \"mousemove\", this.mouseMoveFn);\r\n    }\r\n\r\n    onMouseMoveSlLBtn (e) {\r\n        if (!this.clientXOld) this.clientXOld = e.clientX;\r\n        let l = e.clientX - this.pos;\r\n        if (l < 0) l = 0;\r\n        let isToLeft = this.slLBtn.offsetLeft < l;\r\n        let rangeWidth = this.slRBtn.offsetLeft - l;\r\n        if (rangeWidth - this.widthBtn < this.minRangeWidth) return;\r\n\r\n        this.slLBtn.style.left = this.slLBl.style.width = l + \"px\";\r\n        this.slRange.style.left = l + this.widthBtn + \"px\";\r\n        this.slRange.style.width = rangeWidth + \"px\";\r\n\r\n        this.calcDrawMoveStep(e);\r\n        const s = this.slLBtn.offsetLeft / this.rx;\r\n        const f = (this.slRBtn.offsetLeft + this.widthBtn) / this.rx + 1;\r\n\r\n        if (isToLeft) this.obDraw.compressAxisXtoLeft(s, f);\r\n        else this.obDraw.stretchAxisXtoLeft(s, f);\r\n    }\r\n\r\n    onMouseMoveSlRange (e) {\r\n        if (!this.clientXOld) this.clientXOld = e.clientX;\r\n        let l = e.clientX - this.pos;\r\n        const tmpmax = this.w - this.widthBtn*2 - this.slRange.offsetWidth;\r\n        if (l < 0)  l = 0;\r\n        else if (l > tmpmax) l = tmpmax;\r\n        let isToLeft = this.slLBtn.offsetLeft > l;\r\n\r\n        this.slLBtn.style.left = this.slLBl.style.width = l + \"px\";\r\n        l += this.widthBtn;\r\n        this.slRange.style.left = l + \"px\";\r\n        l += this.slRange.offsetWidth;\r\n        this.slRBtn.style.left = l + \"px\";\r\n        this.slRBl.style.width = this.w - l - this.widthBtn + \"px\";\r\n\r\n        this.calcDrawMoveStep(e);\r\n        this.obDraw.move(\r\n            isToLeft,\r\n            this.slLBtn.offsetLeft / this.rx,\r\n            (this.slRBtn.offsetLeft + this.widthBtn) / this.rx + 1\r\n        );\r\n    }\r\n\r\n    onMouseMoveSlRBtn (e) {\r\n        if (!this.clientXOld) this.clientXOld = e.clientX;\r\n        let l = e.clientX - this.pos;\r\n        const tmpmax = this.w - this.widthBtn;\r\n        if (l > tmpmax) l = tmpmax;\r\n        let isToRight = this.slRBtn.offsetLeft < l;\r\n        let rangeWidth = l - this.slLBtn.offsetLeft - this.widthBtn;\r\n        if (rangeWidth < this.minRangeWidth) return;\r\n\r\n        this.slRBtn.style.left = l + \"px\";\r\n        this.slRBl.style.width = this.w - l + \"px\";\r\n        this.slRange.style.width = rangeWidth + \"px\";\r\n\r\n        this.calcDrawMoveStep(e);\r\n        const s = this.slLBtn.offsetLeft / this.rx;\r\n        const f = (this.slRBtn.offsetLeft + this.widthBtn) / this.rx + 1;\r\n\r\n        if (isToRight) this.obDraw.stretchAxisXtoRight(s, f);\r\n        else this.obDraw.compressAxisXtoRight(s, f);\r\n    }\r\n\r\n    onMouseUp (e) {\r\n        this.isMouseHint = false;\r\n        this.removeMouse();\r\n    }\r\n\r\n    removeMouse () {\r\n        this.obDraw.dateMoveStep = this.obDraw.dateMoveStepDefault;\r\n        if (this.mouseMoveFn) off(document, \"mousemove\", this.mouseMoveFn);\r\n        this.mouseMoveFn = undefined;\r\n    }\r\n\r\n    detectLeftMouse (e) {\r\n        e = e || window.event;\r\n        if (\"buttons\" in e) return e.buttons == 1;\r\n        return (e.which || e.button) == 1;\r\n    }\r\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}